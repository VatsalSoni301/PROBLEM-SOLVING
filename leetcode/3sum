/*
Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:

The solution set must not contain duplicate triplets.

Example:

Given array nums = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]

*/
class Solution {
public:
	vector<vector<int>> threeSum(vector<int>& nums) {
		vector<vector<int>> ans;
		sort(nums.begin(), nums.end());
		for (int i = 0; i < nums.size(); i++) {
			int l = i + 1, r = nums.size() - 1;
			while (l < r) {
				int curr = nums[l] + nums[r];
				if (curr < -nums[i])l++;
				else if (curr > -nums[i]) r--;
				else {
					vector<int> temp = {nums[i], nums[l],nums[r]};
					ans.push_back(temp);
					while (l < r && nums[l] == temp[1])l++;
					while (l < r && nums[r] == temp[2])r--;
				}
			}
			while (i + 1 < nums.size() && nums[i] == nums[i + 1])i++;
		}
		return ans;
	}
};
