/*

Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].

*/



class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        map<int,vector<int> > m;
        vector<int> v;
        for(int i=0;i<nums.size();i++)
        {
            m[nums[i]].push_back(i);
        }
        for(auto i : m)
        {
            auto itr=m.find(target-i.first);
            vector<int> vv=m[target-i.first];
            if(itr!=m.end())
            {
                if(i.first==target-i.first)
                {
                    v.push_back(i.second[0]);
                    v.push_back(i.second[1]);
                    break;
                }
                else
                {
                        v.push_back(i.second[0]);
                        v.push_back(m[target-i.first][0]);
                        break;
                }
            }
        }
        return v;
    }
};
